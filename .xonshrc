#!/usr/bin/env xonsh
# vim:ts=4:expandtab:ft=python

from xonsh.tools import unthreadable, uncapturable

WAYLAND_HOSTS = {
    'spoonman',
}

env_overrides = {
    'KLARDOTSH_WAYLAND_HOSTS': ','.join(WAYLAND_HOSTS),
    'KLARDOTSH_SHOULD_USE_WAYLAND': $(hostname).strip() in WAYLAND_HOSTS,

    'BROWSER': 'xdg-open',
    'COMPLETIONS_CONFIRM': True,
    'EDITOR': 'nvim',
    'GOPATH': "~/.go",
    'GPG_TTY': $(tty).strip(),
    'GTK2_RC_FILES': "~/.gtkrc-2.0",
    'GTK_CSD': 0,
    'GTK_IM_MODULE': 'ibus',
    'IBUS_ENABLE_CTRL_SHIFT_U': 1,
    'LANG': 'en_CA.utf8',
    'MANPAGER': 'most -s',
    'MOZ_USE_XINPUT2': 1, # Pixel-perfect trackpads <3
    'NPM_PACKAGES': "~/.npm-packages",
    'QT_IM_MODULE': 'ibus',
    'QT_QPA_PLATFORMTHEME': 'qt5ct',
    'SSH_AUTH_SOCK': "/run/user/{}/gnupg/S.gpg-agent.ssh".format($(id -u).strip()),
    'TERMINAL': 'kitty',
    'VI_MODE': True,
    'XMODIFIERS': '@im=ibus',
    'XONSH_APPEND_NEWLINE': True,
    'XONSH_AUTOPAIR': True,
    '_JAVA_OPTIONS': '-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel',
}

# try/except against FileNotFoundError and XonshError both failed here,
# so take the slight perf hit to instead check for existence
if $(which rustc):
    env_overrides['RUST_SRC_PATH'] = "{}/lib/rustlib/src/rust/src".format($(rustc --print sysroot))

if $(which pyenv):
    # Hackaround for pipenv to auto-install pythons as needed
    env_overrides['PYENV_ROOT'] = $(pyenv root)

env_overrides['PATH'] = [
    '~/bin',
    '~/.local/bin',
    '~/.cargo/bin',
    '{}/bin'.format(env_overrides['GOPATH']),
    '{}/bin'.format(env_overrides['NPM_PACKAGES']),
    '{}/bin'.format($(ruby -e 'print Gem.user_dir')) if $(which ruby) else '',
    '/usr/local/sbin',
    '/usr/local/bin',
    '/usr/bin',

    '/opt/android-sdk/platform-tools',
    '/usr/lib/jvm/default/bin',

    # Not sure if these are needed, but they were in my ZSH $PATH on Arch ¯\_(ツ)_/¯
    '/usr/bin/site_perl',
    '/usr/bin/vendor_perl',
    '/usr/bin/core_perl',
]

env_overrides['MANPATH'] = [
    '{}/share/man'.format(env_overrides['NPM_PACKAGES']),
    *$(manpath).strip().split(':'),
]

if env_overrides['KLARDOTSH_SHOULD_USE_WAYLAND']:
    env_overrides['GDK_BACKEND'] = 'wayland'
    env_overrides['QT_QPA_PLATFORM'] = 'wayland-egl'

__xonsh__.env.update(env_overrides)

aliases.update({
    'e': 'nvim',
    'vim': 'nvim',

    'pf': 'yay -Ss',
    'pi': 'yay -S',
    'pii': 'yay -Sy',
    'pu': 'yay -Syu',
    'pql': 'pacman -Ql',
    'pqs': 'pacman -Qs',

    'mp': 'makepkg -icsr',

    'sudo': 'sudo -E ',

    'df': 'df -h -x devtmpfs -x rootfs -x tmpfs', # hide all these Arch-standard FSes

    'cp': 'cp -iv',
    'mv': 'mv -iv',
    'rm': 'rm -iv',

    'chmod': "chmod -c",
    'chown': "chown -c",

    'grep': 'grep --colour=auto',
    'egrep': 'egrep --colour=auto',

    'ls': 'ls --color=auto --human-readable --group-directories-first --classify',
    'tree': 'tree -CA',

    'gl': 'git lol',
    'gls': "git lol --since '2 weeks' --author 'Josh Klar'",
    'gca': 'git cram', # Muscle memory dies hard - this is NOT git commit -a

    'diff': $(which colordiff) and "colordiff -Nuar" or 'diff -Nuar',

    # Bypass venvs and other nonsense (and also broken Arch package links?)
    'poetry': "/usr/bin/python -m poetry",
    'poetry2': "/usr/bin/python2 -m poetry",

})

$PROMPT = "{INTENSE_BLACK}({hostname}) {PURPLE}{cwd_base}{branch_color}{curr_branch: » {}} {INTENSE_BLACK}» "
